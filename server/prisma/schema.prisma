// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified Boolean?
  role          ROLE      @default(STUDENT)
  password      String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  messages      Message[]
  reacts        React[]
}

enum ROLE {
  TEACHER
  STUDENT
  ADMIN
}

model Cours {
  id    String @id @default(uuid())
  cours Cour[]
}

model Cour {
  id          String    @id @default(uuid())
  name        String?
  description String?
  icon        String?
  cover       String?
  cours       Cours     @relation(fields: [coursId], references: [id])
  coursId     String
  reacts      React[]
  chapter     Chapter[]
}

model React {
  react  REACT   @default(NOTHING)
  id     String  @id @default(uuid())
  Cour   Cour?   @relation(fields: [courId], references: [id])
  courId String?
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

enum REACT {
  NOTHING
  LIKED
  DISLIKED
}

model Chapter {
  id         Int          @id @default(autoincrement())
  cour       Cour         @relation(fields: [courId], references: [id])
  courId     String
  files      String
  discussion Discussion[]
}

// progress missing
model Progress {
  id       String    @id @default(uuid())
  status   String?
  lastDate DateTime?
}

model Discussion {
  id        String    @id @default(uuid())
  Chapter   Chapter?  @relation(fields: [chapterId], references: [id])
  chapterId Int?
  messages  Message[]
}

model Message {
  id           String      @id @default(uuid())
  user         User[]
  message      String?
  createdAt    DateTime    @default(now())
  Discussion   Discussion? @relation(fields: [discussionId], references: [id])
  discussionId String?
}
